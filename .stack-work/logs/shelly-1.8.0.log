Configuring shelly-1.8.0...
Preprocessing library for shelly-1.8.0..
Building library for shelly-1.8.0..
[1 of 6] Compiling Shelly.Base      ( src/Shelly/Base.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly/Base.o )

[;1msrc/Shelly/Base.hs:41:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of â€˜ProcessHandleâ€™
    from module â€˜System.Processâ€™ is redundant[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m41 |[0m[0m [;1m[35mimport System.Process( ProcessHandle, StdStream(..) )[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Base.hs:44:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of â€˜liftMâ€™ from module â€˜Control.Monadâ€™ is redundant[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m44 |[0m[0m [;1m[35mimport Control.Monad (when, (>=>),[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[2 of 6] Compiling Shelly.Find      ( src/Shelly/Find.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly/Find.o )

[;1msrc/Shelly/Find.hs:67:5: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wname-shadowing[0m[0m[;1m][0m[0m[;1m
    This binding for â€˜traverseâ€™ shadows the existing binding
      imported from â€˜Preludeâ€™ at src/Shelly/Find.hs:11:1-32
      (and originally defined in â€˜Data.Traversableâ€™)[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m67 |[0m[0m     [;1m[35mtraverse[0m[0m acc (relativePath, absolutePath) = do
[;1m[34m   |[0m[0m[;1m[35m     ^^^^^^^^[0m[0m
[0m[0m[0m[3 of 6] Compiling Shelly           ( src/Shelly.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly.o )

[;1msrc/Shelly.hs:106:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of â€˜toLowerâ€™ from module â€˜Data.Charâ€™ is redundant[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m106 |[0m[0m [;1m[35mimport Data.Char ( isAlphaNum, isSpace, toLower )[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly.hs:131:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of â€˜Monoidâ€™ from module â€˜Data.Monoidâ€™ is redundant[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m131 |[0m[0m [;1m[35mimport Data.Monoid (Monoid, mempty, mappend)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly.hs:387:5: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wincomplete-patterns[0m[0m[;1m][0m[0m[;1m
    Pattern match(es) are non-exhaustive
    In an equation for â€˜toHandleâ€™:
        Patterns not matched: (Just NoStream)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m387 |[0m[0m     [;1m[35mtoHandle (Just (UseHandle h)) = Just h[0m[0m
[;1m[34m    |[0m[0m[;1m[35m     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Shelly.hs:799:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: â€˜normalizeEnvVarNameStringâ€™[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m799 |[0m[0m [;1m[35mnormalizeEnvVarNameString[0m[0m = id
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[4 of 6] Compiling Shelly.Lifted    ( src/Shelly/Lifted.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly/Lifted.o )

[;1msrc/Shelly/Lifted.hs:105:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of â€˜Data.Monoidâ€™ is redundant
      except perhaps to import instances from â€˜Data.Monoidâ€™
    To import instances alone, use: import Data.Monoid()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m105 |[0m[0m [;1m[35mimport Data.Monoid[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:115:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    Module â€˜Control.Monad.Trans.Listâ€™ is deprecated:
      This transformer is invalid on most monads[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m115 |[0m[0m [;1m[35mimport Control.Monad.Trans.List[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:118:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    Module â€˜Control.Monad.Trans.Errorâ€™ is deprecated:
      Use Control.Monad.Trans.Except instead[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m118 |[0m[0m [;1m[35mimport Control.Monad.Trans.Error[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:135:32: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m135 |[0m[0m instance MonadSh m => MonadSh ([;1m[35mListT[0m[0m m) where
[;1m[34m    |[0m[0m[;1m[35m                                ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:136:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m136 |[0m[0m     liftSh m = [;1m[35mListT[0m[0m $ do
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:143:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜Errorâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m143 |[0m[0m instance ([;1m[35mError[0m[0m e, MonadSh m) => MonadSh (ErrorT e m) where
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:143:43: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m143 |[0m[0m instance (Error e, MonadSh m) => MonadSh ([;1m[35mErrorT[0m[0m e m) where
[;1m[34m    |[0m[0m[;1m[35m                                           ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:144:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m144 |[0m[0m     liftSh m = [;1m[35mErrorT[0m[0m $ do
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:195:46: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m195 |[0m[0m instance MonadShControl m => MonadShControl ([;1m[35mListT[0m[0m m) where
[;1m[34m    |[0m[0m[;1m[35m                                              ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:196:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m196 |[0m[0m     newtype ShM ([;1m[35mListT[0m[0m m) a = ListTShM (ShM m [a])
[;1m[34m    |[0m[0m[;1m[35m                  ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:198:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m198 |[0m[0m         [;1m[35mListT[0m[0m $ liftM return $ liftShWith $ \runInSh -> f $ \k ->
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:199:40: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of â€˜runListTâ€™ (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m199 |[0m[0m             liftM ListTShM $ runInSh $ [;1m[35mrunListT[0m[0m k
[;1m[34m    |[0m[0m[;1m[35m                                        ^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:200:30: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ListTâ€™
    (imported from Control.Monad.Trans.List):
    Deprecated: "This transformer is invalid on most monads"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m200 |[0m[0m     restoreSh (ListTShM m) = [;1m[35mListT[0m[0m . restoreSh $ m
[;1m[34m    |[0m[0m[;1m[35m                              ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:243:29: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜Errorâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m243 |[0m[0m instance (MonadShControl m, [;1m[35mError[0m[0m e)
[;1m[34m    |[0m[0m[;1m[35m                             ^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:244:29: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m244 |[0m[0m          => MonadShControl ([;1m[35mErrorT[0m[0m e m) where
[;1m[34m    |[0m[0m[;1m[35m                             ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:245:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of type constructor or class â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m245 |[0m[0m     newtype ShM ([;1m[35mErrorT[0m[0m e m) a = ErrorTShM (ShM m (Either e a))
[;1m[34m    |[0m[0m[;1m[35m                  ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:247:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m247 |[0m[0m         [;1m[35mErrorT[0m[0m $ liftM return $ liftShWith $ \runInSh -> f $ \k ->
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:248:41: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of â€˜runErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m248 |[0m[0m             liftM ErrorTShM $ runInSh $ [;1m[35mrunErrorT[0m[0m k
[;1m[34m    |[0m[0m[;1m[35m                                         ^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Shelly/Lifted.hs:249:31: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of data constructor â€˜ErrorTâ€™
    (imported from Control.Monad.Trans.Error):
    Deprecated: "Use Control.Monad.Trans.Except instead"[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m249 |[0m[0m     restoreSh (ErrorTShM m) = [;1m[35mErrorT[0m[0m . restoreSh $ m
[;1m[34m    |[0m[0m[;1m[35m                               ^^^^^^[0m[0m
[0m[0m[0m[5 of 6] Compiling Shelly.Pipe      ( src/Shelly/Pipe.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly/Pipe.o )
[6 of 6] Compiling Shelly.Unix      ( src/Shelly/Unix.hs, .stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/Shelly/Unix.o )
Installing library in /home/threestrikes/.stack/snapshots/x86_64-linux/lts-13.20/8.6.5/lib/x86_64-linux-ghc-8.6.5/shelly-1.8.0-KHUYiUxXyErJiUIYpXLqe2
Registering library for shelly-1.8.0..
